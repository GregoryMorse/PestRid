#pragma once

//needs to handle output options/conversions for each type
enum eDisplayIndexes
{
	DISPLAY_NONE,
	DISPLAY_INDEX,
	DISPLAY_UI1,
	DISPLAY_UI3,
	DISPLAY_UI2,
	DISPLAY_UI4,
	DISPLAY_UI4_WITHEMPTY, // -1 is not displayed for session IDs
	DISPLAY_UI8,
	DISPLAY_UIPTRRESOLUTION,
	DISPLAY_TSTR,
	DISPLAY_LPTSTR,
	DISPLAY_LPTSTRS,
	DISPLAY_LPATSTRS,
	DISPLAY_LPAKEYTSTRS,
	DISPLAY_LPAKEYVALUES,
	DISPLAY_LPAHEXKEYVALUES,
	DISPLAY_LPWSTR,
	DISPLAY_DEPSTATUS,
	DISPLAY_WINDOWSTATUS,
	DISPLAY_SERVICESTATUS,
	DISPLAY_SERVICETYPE,
	DISPLAY_DRIVERTYPE,
	DISPLAY_SERVICESTARTUPTYPE,
	DISPLAY_LUID,
	DISPLAY_LOGONTYPE,
	DISPLAY_SID,
	DISPLAY_FILETIME,
	DISPLAY_COUNT,
	DISPLAY_DWORDS,
	DISPLAY_HEXBYTES,
	DISPLAY_CONFIGFLAGS,
	DISPLAY_LDRPFLAGS,
	DISPLAY_DRVOBJFLAGS,
	DISPLAY_DEVTYPE,
	DISPLAY_DEVOBJECTFLAGS,
	DISPLAY_DEVCAPS,
	DISPLAY_DEVCHARACTERISTICS,
	DISPLAY_INSTALLSTATE,
	DISPLAY_DEVICESTATUS,
	DISPLAY_DRIVETYPE,
	DISPLAY_FILESYSTEMFLAGS,
	DISPLAY_MEDIATYPE,
	DISPLAY_PARTITIONSTYLE,
	DISPLAY_DETECTIONTYPE,
	DISPLAY_GUID,
	DISPLAY_CHS,
	DISPLAY_PARTITIONTYPE,
	DISPLAY_PARTITIONINDICATOR
};

#ifdef WIN64
#define DISPLAY_UIPTR DISPLAY_UI8
#else
#define DISPLAY_UIPTR DISPLAY_UI4
#endif

int CompareDisplayType(DWORD dwType, void* pbEntry1, void* lParam1, void* pbEntry2, void* lParam2);
void GetDisplayString(DWORD dwType, void* pbEntry, void* lParam, CString & Str);